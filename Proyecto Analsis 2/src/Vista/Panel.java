/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.util.LinkedList;
import Modelo.*;
import java.awt.Dimension;

/**
 *
 * @author Sebas
 */
public class Panel extends javax.swing.JPanel {

    private Arbol a = new Arbol();
    private String estadoActual = "";

    /**
     * Creates new form Panel
     */
    public void pintarArbol(LinkedList<Nodo> nodos) {
        a.resetxMax();
        a.armarArbolDesdeListaDeNodos(nodos);
        a.darPosiciones(a.getRaiz(), 10);
        this.repaint();
    }

    public Panel() {
        initComponents();
        this.setPreferredSize(new Dimension(a.getxMax() + 30, 1000));
        this.revalidate();
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g); //To change body of generated methods, choose Tools | Templates.
        if (a.getRaiz() != null) {
            pintarArbol(a.getRaiz(), g);
        }

    }

    private void pintarArbol(NodoArbol nodo, Graphics g) {
        if (!estadoActual.equalsIgnoreCase("") && estadoActual.equalsIgnoreCase(nodo.getIdMio())) {
            g.setColor(Color.black);
            g.fillOval((int) nodo.getX(), (int) nodo.getY(), 30, 25);
            g.setColor(Color.white);
            g.drawString(nodo.getIdMio(), (int) nodo.getX() + 11, (int) nodo.getY() + 17);
        }else{
            g.setColor(Color.black);
            g.drawOval((int) nodo.getX(), (int) nodo.getY(), 30, 25);
            g.drawString(nodo.getIdMio(), (int) nodo.getX() + 11, (int) nodo.getY() + 17);
        }

        if (!nodo.esHoja()) {
            for (NodoArbol nodo1 : nodo.getHijos()) {
                dibujarFlecha(g, nodo, nodo1);
                pintarArbol(nodo1, g);
            }
        }
    }

    public void dibujarFlecha(Graphics g, NodoArbol nodoP, NodoArbol nodoH) {
        Point punto1 = null, punto2 = null;

        //defino dos puntos extremos
        punto1 = new Point(nodoP.getX() + 15, nodoP.getY() + 25);
        punto2 = new Point(nodoH.getX() + 15, nodoH.getY());

        double ang = 0.0, angSep = 0.0;
        double tx, ty;
        int dist = 0;

        //tama√±o de la punta de la flecha
        dist = 6;

        /* (la coordenadas de la ventana es al revez)
         calculo de la variacion de "x" y "y" para hallar el angulo
         **/
        ty = -(punto1.y - punto2.y) * 1.0;
        tx = (punto1.x - punto2.x) * 1.0;
        //angulo
        ang = Math.atan(ty / tx);

        if (tx < 0) {// si tx es negativo aumentar 180 grados
            ang += Math.PI;
        }

        //puntos de control para la punta
        //p1 y p2 son los puntos de salida
        Point p1 = new Point(), p2 = new Point(), punto = punto2;

        //angulo de separacion
        angSep = 25.0;

        p1.x = (int) (punto.x + dist * Math.cos(ang - Math.toRadians(angSep)));
        p1.y = (int) (punto.y - dist * Math.sin(ang - Math.toRadians(angSep)));
        p2.x = (int) (punto.x + dist * Math.cos(ang + Math.toRadians(angSep)));
        p2.y = (int) (punto.y - dist * Math.sin(ang + Math.toRadians(angSep)));

        //dale color a la linea
        g.setColor(Color.BLUE);
        // grosor de la linea

        //dibuja la linea de extremo a extremo
        g.drawLine(punto1.x, punto1.y, punto.x, punto.y);
        //dibujar la punta
        g.drawLine(p1.x, p1.y, punto.x, punto.y);
        g.drawLine(p2.x, p2.y, punto.x, punto.y);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    /**
     * @param estadoActual the estadoActual to set
     */
    public void setEstadoActual(String estadoActual) {
        this.estadoActual = estadoActual;
        this.repaint();
    }
}
